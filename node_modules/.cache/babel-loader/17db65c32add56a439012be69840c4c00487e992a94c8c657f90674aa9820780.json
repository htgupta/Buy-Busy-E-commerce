{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\h\\\\Downloads\\\\e-com (1)\\\\e-com\\\\e-com\\\\src\\\\Contexts\\\\productsContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// importing Hooks\nimport { createContext, useContext, useEffect, useState } from \"react\";\n// importing Hook from react-router-dom\nimport { useNavigate } from \"react-router-dom\";\n// importing firebase\nimport { db } from \"../firebase\";\nimport { updateDoc, arrayUnion, getDoc, doc } from \"firebase/firestore\";\n// importing function for toast notifications\nimport Notification from \"../utils/Notification\";\n\n// create context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst productsContext = /*#__PURE__*/createContext();\n\n// this return  all value pass to authenticationContext\nfunction useProducts() {\n  _s();\n  const value = useContext(productsContext);\n  return value;\n}\n_s(useProducts, \"ksutO2/Ix3UeCrGnhyM+QEP505Y=\");\nfunction CustomProductsContext({\n  userId,\n  children\n}) {\n  _s2();\n  // priceValue is used to contain range input value\n  // categoryFilters is used to contain category clicked by user in input\n  // searchedProductsData is used to store products after applying filter to it\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [searchedProductsData, setSearchProductsData] = useState([]);\n  const [productsData, setProductsData] = useState([]);\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [priceValue, setPriceValue] = useState(\"100000\");\n  const [categoryFilters, setcategoryFilters] = useState(new Set());\n  const [disableCartButton, setDisableCartButton] = useState(false);\n  const navigate = useNavigate();\n  const [product, setProduct] = useState({});\n\n  // it call under handleFilter when category checkbox are clicked\n  const handleCategory = (checked, categoryFilter, result) => {\n    if (checked) {\n      setcategoryFilters(prev => new Set(prev).add(categoryFilter));\n      setSearchProductsData(result.filter(item => categoryFilters.add(categoryFilter).has(item.productCategory)));\n    } else {\n      setcategoryFilters(prev => {\n        const next = new Set(prev);\n        next.delete(categoryFilter);\n        return next;\n      });\n      const temp = new Set(categoryFilters);\n      temp.delete(categoryFilter);\n      setSearchProductsData(temp.size === 0 ? result : result.filter(item => temp.has(item.productCategory)));\n    }\n  };\n  const handleSearch = data => {\n    // filters items based on product name\n    const result = data.filter(item => {\n      let temp1 = item.productName.toLowerCase();\n      let temp2 = searchValue;\n      if (temp1.length >= temp2.length) {\n        let index = temp1.indexOf(temp2);\n        if (index === 0) {\n          return item;\n        }\n      }\n      return null;\n    });\n    return result;\n  };\n  const handleRange = value => {\n    setPriceValue(value);\n  };\n  useEffect(() => {\n    handleFilter();\n  }, [priceValue]);\n  useEffect(() => {\n    handleFilter();\n  }, [searchValue]);\n\n  // filter product based on price and category\n  const handleFilter = (checked, categoryFilter) => {\n    // filter based on price\n    let result = productsData.filter(item => {\n      if (priceValue === \"100000\") {\n        return item;\n      } else if (item.productPrice <= Number(priceValue)) {\n        return item;\n      }\n      return null;\n    });\n    if (searchValue) {\n      // filter based on product name\n      result = handleSearch(result);\n    }\n    if (categoryFilter) {\n      // filter based on product category\n      handleCategory(checked, categoryFilter, result);\n    } else if (categoryFilters.size === 0) {\n      setSearchProductsData(result);\n    } else {\n      setSearchProductsData(result.filter(item => categoryFilters.has(item.productCategory)));\n    }\n  };\n\n  // add product to cart when user click on add to cart button\n  const handleAddToCart = (e, item) => {\n    e.stopPropagation();\n    setDisableCartButton(true);\n    if (userId) {\n      async function addproduct() {\n        const docRef = doc(db, \"usersCarts\", userId);\n        const docSnap = await getDoc(docRef);\n        if (docSnap.exists()) {\n          // product exist\n          // find index of product in cart\n          let index = docSnap.data().products.findIndex(obj => obj.productId === item.productId);\n          if (index === -1) {\n            // update product to cart\n            async function updateDocs() {\n              await updateDoc(doc(db, \"usersCarts\", userId), {\n                products: arrayUnion({\n                  ...item,\n                  qty: 1\n                })\n              });\n              Notification(\"Item added to cart\", false);\n              setDisableCartButton(false);\n            }\n            updateDocs();\n          } else {\n            Notification(\"Item is already in cart\", true);\n            setDisableCartButton(false);\n          }\n        } else {\n          console.log(\"No such document exist!\");\n          setDisableCartButton(false);\n        }\n      }\n      addproduct();\n    } else {\n      Notification(\"please Login before adding items to cart\", true);\n      setDisableCartButton(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(productsContext.Provider, {\n    value: {\n      isLoading,\n      setIsLoading,\n      userId,\n      searchedProductsData,\n      setSearchProductsData,\n      setProductsData,\n      priceValue,\n      handleRange,\n      handleFilter,\n      handleAddToCart,\n      productsData: searchedProductsData,\n      navigate,\n      disableCartButton,\n      product,\n      setProduct,\n      setSearchValue\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n}\n_s2(CustomProductsContext, \"X6vKO4htgE5qbCK/H87xVlCaMCw=\", false, function () {\n  return [useNavigate];\n});\n_c = CustomProductsContext;\nexport default CustomProductsContext;\nexport { useProducts };\nvar _c;\n$RefreshReg$(_c, \"CustomProductsContext\");","map":{"version":3,"names":["createContext","useContext","useEffect","useState","useNavigate","db","updateDoc","arrayUnion","getDoc","doc","Notification","jsxDEV","_jsxDEV","productsContext","useProducts","_s","value","CustomProductsContext","userId","children","_s2","isLoading","setIsLoading","searchedProductsData","setSearchProductsData","productsData","setProductsData","searchValue","setSearchValue","priceValue","setPriceValue","categoryFilters","setcategoryFilters","Set","disableCartButton","setDisableCartButton","navigate","product","setProduct","handleCategory","checked","categoryFilter","result","prev","add","filter","item","has","productCategory","next","delete","temp","size","handleSearch","data","temp1","productName","toLowerCase","temp2","length","index","indexOf","handleRange","handleFilter","productPrice","Number","handleAddToCart","e","stopPropagation","addproduct","docRef","docSnap","exists","products","findIndex","obj","productId","updateDocs","qty","console","log","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/h/Downloads/e-com (1)/e-com/e-com/src/Contexts/productsContext.js"],"sourcesContent":["// importing Hooks\r\nimport { createContext, useContext, useEffect, useState } from \"react\";\r\n// importing Hook from react-router-dom\r\nimport { useNavigate } from \"react-router-dom\";\r\n// importing firebase\r\nimport { db } from \"../firebase\";\r\nimport { updateDoc, arrayUnion, getDoc, doc } from \"firebase/firestore\";\r\n// importing function for toast notifications\r\nimport Notification from \"../utils/Notification\";\r\n\r\n// create context\r\nconst productsContext = createContext();\r\n\r\n// this return  all value pass to authenticationContext\r\nfunction useProducts() {\r\n  const value = useContext(productsContext);\r\n  return value;\r\n}\r\n\r\nfunction CustomProductsContext({ userId, children }) {\r\n  // priceValue is used to contain range input value\r\n  // categoryFilters is used to contain category clicked by user in input\r\n  // searchedProductsData is used to store products after applying filter to it\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [searchedProductsData, setSearchProductsData] = useState([]);\r\n  const [productsData, setProductsData] = useState([]);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [priceValue, setPriceValue] = useState(\"100000\");\r\n  const [categoryFilters, setcategoryFilters] = useState(new Set());\r\n  const [disableCartButton, setDisableCartButton] = useState(false);\r\n  const navigate = useNavigate();\r\n  const [product, setProduct] = useState({});\r\n\r\n  // it call under handleFilter when category checkbox are clicked\r\n  const handleCategory = (checked, categoryFilter, result) => {\r\n    if (checked) {\r\n      setcategoryFilters((prev) => new Set(prev).add(categoryFilter));\r\n      setSearchProductsData(\r\n        result.filter((item) =>\r\n          categoryFilters.add(categoryFilter).has(item.productCategory)\r\n        )\r\n      );\r\n    } else {\r\n      setcategoryFilters((prev) => {\r\n        const next = new Set(prev);\r\n        next.delete(categoryFilter);\r\n        return next;\r\n      });\r\n\r\n      const temp = new Set(categoryFilters);\r\n      temp.delete(categoryFilter);\r\n\r\n      setSearchProductsData(\r\n        temp.size === 0\r\n          ? result\r\n          : result.filter((item) => temp.has(item.productCategory))\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleSearch = (data) => {\r\n    // filters items based on product name\r\n    const result = data.filter((item) => {\r\n      let temp1 = item.productName.toLowerCase();\r\n      let temp2 = searchValue;\r\n      if (temp1.length >= temp2.length) {\r\n        let index = temp1.indexOf(temp2);\r\n        if (index === 0) {\r\n          return item;\r\n        }\r\n      }\r\n      return null;\r\n    });\r\n\r\n    return result;\r\n  };\r\n\r\n  const handleRange = (value) => {\r\n    setPriceValue(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleFilter();\r\n  }, [priceValue]);\r\n\r\n  useEffect(() => {\r\n    handleFilter();\r\n  }, [searchValue]);\r\n\r\n  // filter product based on price and category\r\n  const handleFilter = (checked, categoryFilter) => {\r\n    // filter based on price\r\n    let result = productsData.filter((item) => {\r\n      if (priceValue === \"100000\") {\r\n        return item;\r\n      } else if (item.productPrice <= Number(priceValue)) {\r\n        return item;\r\n      }\r\n      return null;\r\n    });\r\n\r\n    if (searchValue) {\r\n      // filter based on product name\r\n      result = handleSearch(result);\r\n    }\r\n\r\n    if (categoryFilter) {\r\n      // filter based on product category\r\n      handleCategory(checked, categoryFilter, result);\r\n    } else if (categoryFilters.size === 0) {\r\n      setSearchProductsData(result);\r\n    } else {\r\n      setSearchProductsData(\r\n        result.filter((item) => categoryFilters.has(item.productCategory))\r\n      );\r\n    }\r\n  };\r\n\r\n  // add product to cart when user click on add to cart button\r\n  const handleAddToCart = (e, item) => {\r\n    e.stopPropagation();\r\n    setDisableCartButton(true);\r\n    if (userId) {\r\n      async function addproduct() {\r\n        const docRef = doc(db, \"usersCarts\", userId);\r\n        const docSnap = await getDoc(docRef);\r\n\r\n        if (docSnap.exists()) {\r\n          // product exist\r\n          // find index of product in cart\r\n          let index = docSnap\r\n            .data()\r\n            .products.findIndex((obj) => obj.productId === item.productId);\r\n          if (index === -1) {\r\n            // update product to cart\r\n            async function updateDocs() {\r\n              await updateDoc(doc(db, \"usersCarts\", userId), {\r\n                products: arrayUnion({ ...item, qty: 1 }),\r\n              });\r\n              Notification(\"Item added to cart\", false);\r\n              setDisableCartButton(false);\r\n            }\r\n            updateDocs();\r\n          } else {\r\n            Notification(\"Item is already in cart\", true);\r\n            setDisableCartButton(false);\r\n          }\r\n        } else {\r\n          console.log(\"No such document exist!\");\r\n          setDisableCartButton(false);\r\n        }\r\n      }\r\n      addproduct();\r\n    } else {\r\n      Notification(\"please Login before adding items to cart\", true);\r\n      setDisableCartButton(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <productsContext.Provider\r\n      value={{\r\n        isLoading,\r\n        setIsLoading,\r\n        userId,\r\n        searchedProductsData,\r\n        setSearchProductsData,\r\n        setProductsData,\r\n        priceValue,\r\n        handleRange,\r\n        handleFilter,\r\n        handleAddToCart,\r\n        productsData: searchedProductsData,\r\n        navigate,\r\n        disableCartButton,\r\n        product,\r\n        setProduct,\r\n        setSearchValue,\r\n      }}\r\n    >\r\n      {children}\r\n    </productsContext.Provider>\r\n  );\r\n}\r\n\r\nexport default CustomProductsContext;\r\nexport { useProducts };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}